/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProductTracking,
  ProductTrackingInterface,
} from "../ProductTracking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_supplier",
        type: "address",
      },
    ],
    name: "addSupplierInWhiteList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_supplier",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_queueId",
        type: "uint8",
      },
    ],
    name: "addressPullAccessToQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_supplier",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_queueId",
        type: "uint8",
      },
    ],
    name: "addressPushAccessToQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "batchInQueue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canDecryptSupplierInfo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_queueId",
        type: "uint8",
      },
    ],
    name: "getProductsInQueue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getProductsProcessedBatch",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_queueId",
        type: "uint8",
      },
    ],
    name: "getProductsProcessedStep",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "supplier",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timetracked",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "transferred",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "reprocessedCounter",
            type: "uint256",
          },
        ],
        internalType: "struct ProductTracking.Step",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_supplier",
        type: "address",
      },
    ],
    name: "isSupplierInWhiteList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "productsProcessed",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "batch",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_queueId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "pushBatchInQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queuePullAccess",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queuePushAccess",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supplierInfo",
    outputs: [
      {
        internalType: "string",
        name: "ragsoc",
        type: "string",
      },
      {
        internalType: "string",
        name: "piva",
        type: "string",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_queueIdA",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_queueIdB",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "transferBatchFromTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type ProductTrackingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProductTrackingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProductTracking__factory extends ContractFactory {
  constructor(...args: ProductTrackingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProductTracking> {
    return super.deploy(overrides || {}) as Promise<ProductTracking>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ProductTracking {
    return super.attach(address) as ProductTracking;
  }
  connect(signer: Signer): ProductTracking__factory {
    return super.connect(signer) as ProductTracking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProductTrackingInterface {
    return new utils.Interface(_abi) as ProductTrackingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProductTracking {
    return new Contract(address, _abi, signerOrProvider) as ProductTracking;
  }
}
